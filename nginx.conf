# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            off;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
       # listen       80;
       # listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;
        include /etc/nginx/mime.types;
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
 
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
		
		location = / {
           proxy_set_header X-Real-IP $remote_addr;
           proxy_pass http://localhost:8080;
		   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Scheme $scheme;
        }
		
		location ~ \.css {
           add_header  Content-Type    text/css;
	       proxy_pass http://localhost:8080;
		   expires -1;
		   add_header Pragma "no-cache";
         # add_header Cache-Control no-store;
        }
		
        location ~ \.js {
           add_header  Content-Type    application/x-javascript;
		   proxy_pass http://localhost:8080;
		   expires -1;
         #  add_header Cache-Control no-store;
		   add_header Pragma "no-cache";
         #  add_header Cache-Control "private";
        }
		
		location ~* \.(eot|ttf|woff|svg|otf|woff2|png|bmp)$ {
           add_header Access-Control-Allow-Origin 'http://favfor.me';
           add_header Access-Control-Allow-Headers X-Requested-With;
           add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
           proxy_pass http://localhost:8080;
		   expires -1;
         #  add_header Cache-Control no-store;
        }
		
		location ~ \.html {
		   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Scheme $scheme;
		   proxy_pass http://localhost:8080;
		     expires -1;
         # add_header Cache-Control no-store;
        }
		
        location = /api/pi {
          # proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Original-URI $request_uri;
           proxy_pass http://localhost:8080;
        }

        location = /api/login_account{
           proxy_set_header X-Real-IP $remote_addr;
           proxy_pass http://localhost:8080;
        }

        location = /api/create_account{
           proxy_set_header X-Real-IP $remote_addr;
           proxy_pass http://localhost:8080;
        }

        location = /api/forgot_password{
           proxy_set_header X-Real-IP $remote_addr;
           proxy_pass http://localhost:8080;
        }

         location = /api/reset_password{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
         }

        location = /api/all_device_list{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
        }

        location = /api/refresh_token{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
        }

        location = /api/logout_account{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
        }

       location = /api/device_name{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
        }

        location = /api/user_info{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
        }

        location = /api/associate_code{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://localhost:8080;
        }

		location = /api/ws{
           proxy_set_header X-Real-IP $remote_addr;
		   proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
           proxy_read_timeout 86400;
           proxy_pass http://localhost:8080;
        }

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
		ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }
}

